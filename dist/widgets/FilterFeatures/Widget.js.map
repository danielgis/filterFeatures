{"version":3,"sources":["../../../widgets/FilterFeatures/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Query","QueryTask","baseClass","postCreate","inherited","arguments","console","log","startup","map","feature","getLayer","config","departamento","id","urlService","url","clause","valueField","value","labelField","label","attachPoint","depaSelectAttachPoint","_filterFeature","queryTask","query","where","outFields","execute","results","options","i","features","opt","attributes","push"],"mappings":"QAAoB,oB,EACG,iB,EACa,+B,EAClB,kB,EACI,sB,aAJfA,O,EACAC,U,EACAC,uB,EACAC,K,EACAC,S;SAKQJ,QAAQ,CACrBC,UADqB,EAErBC,uBAFqB,EAGrBC,KAHqB,EAIrBC,SAJqB,CAAR,EAID;;AAEZ;;AAEAC,eAAW,iBAJC;;AASZC,cATY,wBASE;AACZ,WAAKC,SAAL,CAAeC,SAAf;AACAC,cAAQC,GAAR,CAAY,4BAAZ;AACD,KAZW;AAcZC,WAdY,qBAcF;AACR,WAAKJ,SAAL,CAAeC,SAAf;AACAC,cAAQC,GAAR,CAAY,yBAAZ;AACAD,cAAQC,GAAR,CAAY,KAAKE,GAAjB;AACA,UAAIC,UAAU,KAAKD,GAAL,CAASE,QAAT,CAAkB,KAAKC,MAAL,CAAYC,YAAZ,CAAyBC,EAA3C,CAAd;;AAEA,UAAIC,aAAaL,QAAQM,GAAzB;AACA,UAAIC,SAAS,KAAb;AACA,UAAIC,aAAa,KAAKN,MAAL,CAAYC,YAAZ,CAAyBM,KAA1C;AACA,UAAIC,aAAa,KAAKR,MAAL,CAAYC,YAAZ,CAAyBQ,KAA1C;AACA,UAAIC,cAAc,KAAKC,qBAAvB;AACA,WAAKC,cAAL,CAAoBT,UAApB,EAAgCE,MAAhC,EAAwCC,UAAxC,EAAoDE,UAApD,EAAgEE,WAAhE;AAED,KA3BW;AA6BZE,kBA7BY,0BA6BGT,UA7BH,EA6BeE,MA7Bf,EA6BuBC,UA7BvB,EA6BmCE,UA7BnC,EA6B+CE,WA7B/C,EA6B2D;AACrE,UAAIG,YAAY,IAAIxB,SAAJ,CAAcc,UAAd,CAAhB;AACA,UAAIW,QAAQ,IAAI1B,KAAJ,EAAZ;AACA0B,YAAMC,KAAN,GAAcV,MAAd;AACAS,YAAME,SAAN,GAAkB,CAACV,UAAD,EAAaE,UAAb,CAAlB;AACAK,gBAAUI,OAAV,CAAkBH,KAAlB,EAAyB,UAASI,OAAT,EAAiB;AACxC,YAAIC,UAAU,EAAd;AACA,aAAI,IAAIC,CAAR,IAAaF,QAAQG,QAArB,EAA8B;AAC5B,cAAIC,MAAM;AACR,qBAASJ,QAAQG,QAAR,CAAiBD,CAAjB,EAAoBG,UAApB,CAA+Bf,UAA/B,CADD;AAER,qBAASU,QAAQG,QAAR,CAAiBD,CAAjB,EAAoBG,UAApB,CAA+BjB,UAA/B;AAFD,WAAV;AAIAa,kBAAQK,IAAR,CAAaF,GAAb;AACD;AACDZ,oBAAYS,OAAZ,GAAsBA,OAAtB;AACD,OAVD;AAWD;AA7CW;AA8CZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEa,G","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Query from \"esri/tasks/query\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\n// import \"dojo/parser\";\r\n// import \"dijit/form/Select\";\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([\r\n  BaseWidget, \r\n  _WidgetsInTemplateMixin, \r\n  Query, \r\n  QueryTask], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'filter-features',\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate () {\r\n    this.inherited(arguments);\r\n    console.log('FilterFeatures::postCreate');\r\n  },\r\n  \r\n  startup() {\r\n    this.inherited(arguments);\r\n    console.log('FilterFeatures::startup');\r\n    console.log(this.map);\r\n    var feature = this.map.getLayer(this.config.departamento.id)\r\n    \r\n    var urlService = feature.url;\r\n    var clause = '1=1';\r\n    var valueField = this.config.departamento.value;\r\n    var labelField = this.config.departamento.label;\r\n    var attachPoint = this.depaSelectAttachPoint;\r\n    this._filterFeature(urlService, clause, valueField, labelField, attachPoint);\r\n\r\n  },\r\n\r\n  _filterFeature(urlService, clause, valueField, labelField, attachPoint){\r\n    var queryTask = new QueryTask(urlService);\r\n    var query = new Query();\r\n    query.where = clause;\r\n    query.outFields = [valueField, labelField];\r\n    queryTask.execute(query, function(results){\r\n      var options = []\r\n      for(var i in results.features){\r\n        var opt = {\r\n          'label': results.features[i].attributes[labelField],\r\n          'value': results.features[i].attributes[valueField]\r\n        };\r\n        options.push(opt);\r\n      }\r\n      attachPoint.options = options;\r\n    });\r\n  },\r\n  // onOpen() {\r\n  //   console.log('FilterFeatures::onOpen');\r\n  // },\r\n  // onClose(){\r\n  //   console.log('FilterFeatures::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('FilterFeatures::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('FilterFeatures::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('FilterFeatures::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('FilterFeatures::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('FilterFeatures::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('FilterFeatures::resize');\r\n  // }\r\n});\r\n"]}