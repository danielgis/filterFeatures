{"version":3,"sources":["../../../../widgets/FilterFeatures/setting/Setting.js"],"names":["declare","BaseWidgetSetting","_WidgetsInTemplateMixin","QueryTask","Query","lang","LayerInfos","array","dom","on","baseClass","startup","inherited","arguments","setConfig","config","postCreate","_setListLayers","NodeUrlDepa","NodeFieldLabelDepa","NodeFieldValueDepa","NodeUrlProv","NodeFieldLabelProv","NodeFieldValueProv","NodeUrlDist","NodeFieldLabelDist","NodeFieldValueDist","setValue","departamento","id","label","value","provincia","distrito","getConfig","dojonodeService","dojonodeAlias","dojonodeValue","getInstance","map","itemInfo","then","hitch","layerInfosObj","infos","getLayerInfoArray","options","i","push","title","evt","selectedLayer","getLayerInfoById","fields","layerObject","optionFields","alias","name","set"],"mappings":"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","file":"Setting.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidgetSetting from 'jimu/BaseWidgetSetting';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport QueryTask from 'esri/tasks/QueryTask';\r\nimport Query from 'esri/tasks/query';\r\nimport lang from 'dojo/_base/lang';\r\nimport LayerInfos from 'jimu/LayerInfos/LayerInfos';\r\nimport array from 'dojo/_base/array';\r\nimport dom from \"dojo/dom\";\r\nimport on from \"dojo/on\";\r\n\r\nexport default declare([\r\n  BaseWidgetSetting,\r\n  _WidgetsInTemplateMixin,\r\n  QueryTask,\r\n  Query,\r\n  ], {\r\n\r\n  baseClass: 'filter-features-setting',\r\n\r\n\r\n  startup: function() {\r\n    this.inherited(arguments);\r\n    this.setConfig(this.config);\r\n  },\r\n\r\n  postCreate () {\r\n    this._setListLayers(this.NodeUrlDepa, this.NodeFieldLabelDepa, this.NodeFieldValueDepa);\r\n    this._setListLayers(this.NodeUrlProv, this.NodeFieldLabelProv, this.NodeFieldValueProv);\r\n    this._setListLayers(this.NodeUrlDist, this.NodeFieldLabelDist, this.NodeFieldValueDist);\r\n\r\n  },\r\n\r\n  setConfig (config) {\r\n    this.config = config;\r\n    this.NodeUrlDepa.setValue(config.departamento.id);\r\n    this.NodeFieldLabelDepa.setValue(config.departamento.label);\r\n    this.NodeFieldValueDepa.setValue(config.departamento.value);\r\n\r\n    this.NodeUrlProv.setValue(config.provincia.id);\r\n    this.NodeFieldLabelProv.setValue(config.provincia.label);\r\n    this.NodeFieldValueProv.setValue(config.provincia.value);\r\n\r\n    this.NodeUrlDist.setValue(config.distrito.id);\r\n    this.NodeFieldLabelDist.setValue(config.distrito.label);\r\n    this.NodeFieldValueDist.setValue(config.distrito.value);\r\n  },\r\n\r\n  getConfig () {\r\n    // this._setListLayers();\r\n    // WAB will get config object through this method\r\n    return {\r\n      departamento: {\r\n        'id': this.NodeUrlDepa.value,\r\n        'label': this.NodeFieldLabelDepa.value,\r\n        'value': this.NodeFieldValueDepa.value\r\n      },\r\n      provincia: {\r\n        'id': this.NodeUrlProv.value,\r\n        'label': this.NodeFieldLabelProv.value,\r\n        'value': this.NodeFieldValueProv.value\r\n      },\r\n      distrito: {\r\n        'id': this.NodeUrlDist.value,\r\n        'label': this.NodeFieldLabelDist.value,\r\n        'value': this.NodeFieldValueDist.value\r\n      }\r\n    };\r\n  },\r\n\r\n  _setListLayers(dojonodeService, dojonodeAlias, dojonodeValue){\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo)\r\n    .then(lang.hitch(this, function(layerInfosObj) {\r\n      var infos = layerInfosObj.getLayerInfoArray();\r\n      var options = [];\r\n      for (var i in infos){\r\n        options.push({\r\n          label: infos[i].title,\r\n          value: infos[i].id,\r\n        })\r\n      };\r\n      dojonodeService.options = options;\r\n\r\n      dojonodeService.on('change', function(evt){\r\n        var selectedLayer = layerInfosObj.getLayerInfoById(evt);\r\n        var fields = selectedLayer.layerObject.fields;\r\n        var optionFields = []\r\n        for (var i in fields){\r\n          optionFields.push({\r\n            label: fields[i].alias,\r\n            value: fields[i].name,\r\n          })\r\n        };\r\n        dojonodeAlias.set('options', optionFields);\r\n        dojonodeValue.set('options', optionFields);\r\n      })\r\n    }));\r\n  },\r\n\r\n});\r\n"]}